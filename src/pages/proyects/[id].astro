---
import { getCollection, render } from 'astro:content'; //getCollection para obtener la colleccion y sus propiedades, render para obtener el contenido de la coleccion
import Header from '../../components/Header.astro';
import Layout from '../../layouts/Layout.astro';


export async function getStaticPaths() {
  const proyects = await getCollection('proyects');

  return proyects.map((proyect) => ({
    params: { id: proyect.slug},
    props: { proyect }

  }))
   
}

const { proyect } = Astro.props;
const { data } = proyect;
const { title, github, carrusel } = data
const { video, imagenes } = carrusel
const { Content } = await render(proyect) // se obtiene la propiedad content de render para obtener el contenido del md

console.log(video)

---


<Layout title={`${title}`}>

  
  
  <main>

    <Header items={[{title: `${title}`, href: '#'}]}/>

  

    <div id="controls-carousel" class="grid grid-cols-1 relative w-full shadow-[0_4px_8px_rgba(0,0,0,0.1)] z-10 mt-32 md:mt-12" data-carousel="static">
      <!-- Carousel wrapper -->
      <div class="relative h-56 overflow-hidden rounded-lg md:h-96">
        <!-- Item 1 -->
        <div class="duration-700 ease-in-out" data-carousel-item="active">
          <video autoplay loop muted playsinline src={video}
                  class="absolute object-cover block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2">
          </video>
        </div>

        <!-- Imagenes carrusel -->
        {
          imagenes.map(image => {
            
            return (
            <div class="hidden duration-700 ease-in-out" data-carousel-item>
              <img src= {image} class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="..."/> 
            </div>
            )
          })
        }
        
      <!-- Slider controls -->
      <button type="button" class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
        <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
          <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
          </svg>
          <span class="sr-only">Previous</span>
        </span>
      </button>
      <button type="button" class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-next>
        <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
          <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
          </svg>
          <span class="sr-only">Next</span>
        </span>
      </button>
    </div>

    <!--Contenido de la pagina -->
  
    <div  class="prose mt-20 text-custom-subtitle-text">
      <Content/> <!-- Content viene de render, se llama como etiqueta html y renderiza todo el contenido de el markDown -->
    </div>
  
  </main>

  <script src="/lib/carrusel.js" type="module"></script>
</Layout>